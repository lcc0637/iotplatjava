<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ipincloud.iotbj.srv.dao.RoleBtnDao">
    <resultMap type="com.ipincloud.iotbj.srv.domain.RoleBtn" id="RoleBtnMap">
        <result property="roleId" column="role_id" jdbcType="BIGINT"/> 
        <result property="btnId" column="btn_id" jdbcType="BIGINT"/> 
    </resultMap>
        
        <select id="queryById" resultMap="RoleBtnMap">
            select * from role_btn where id=#{id}
        </select>
        
        
        
            <insert id="roleBtnSetRelation" parameterType="java.util.Map" >
                <if test="jsonObj.role_btn_delqps!=null and jsonObj.role_btn_delqps.size()>0">
                delete from role_btn 
                  <where> 
                  <foreach collection="jsonObj.role_btn_delqps" item="item" index="index" >
                    <if test="item.op == 'like' ">    
                        and `${item.name}` like concat('%',#{item.val},'%')
                    </if>
                    <if test='item.op == "=" or item.op == "" or item.op == null '>    
                        and `${item.name}` = #{item.val}
                    </if>
                    <if test='item.op == "in" '>    
                        and `${item.name}` in 
                        <foreach  item="item2" collection="item.val" index="index2"  open="(" separator="," close=")">#{item2}
                        </foreach>
                    </if>
                  </foreach>
                  </where>
                </if>
                insert ignore into role_btn
                   <foreach collection="jsonObj.role_btn[0].keys" item="key" open="(" close=")" separator=",">  
                        ${key}  
                   </foreach>
                   values
                   <foreach collection="jsonObj.role_btn" item="item"  separator=",">  
                       <foreach collection="jsonObj.role_btn[0].keys" item="key" open="(" close=")" separator=",">  
                            #{item[${key}]}  
                       </foreach>
                   </foreach>
            </insert>
            
        
        
            <delete id="deletesInst" parameterType="java.util.Map" >
            <if test="jsonObj.role_btn!=null and jsonObj.role_btn.size()>0">
            delete from role_btn 
              <where> 
              <foreach collection="jsonObj.role_btn" item="item" index="index" >
                <if test='item.op == "like" '>    
                    and `${item.name}` like concat('%',#{item.val},'%')
                </if>
                <if test='item.op == "=" or item.op == "" or item.op == null '>    
                    and `${item.name}` = #{item.val}
                </if>
                <if test='item.op == "in" '>    
                    and `${item.name}` in 
                    <foreach  item="item2" collection="item.val" index="index2"  open="(" separator="," close=")">#{item2}
                    </foreach>
                </if>
              </foreach>
              </where>
            </if>
            </delete>

            
        
        
            <insert id="addInst" parameterType="java.util.Map" >
                insert into role_btn
                   <foreach collection="jsonObj.keys" item="key" open="(" close=")" separator=",">  
                        ${key}  
                   </foreach>
                   values
                   <foreach collection="jsonObj.keys" item="key" open="(" close=")" separator=",">  
                        #{jsonObj[${key}]}  
                   </foreach>
            </insert>
            
        
        
            <update id="updateInst" parameterType="java.util.Map" >
               UPDATE role_btn SET  
               <foreach collection="jsonObj.keys" item="key" separator=","> 
                   <if test="key != 'id' ">   
                   ${key} = #{jsonObj[${key}]}
                   </if>
               </foreach>  
               where id = #{jsonObj.id}
            </update>
            
        
</mapper>
