<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ipincloud.iotbj.srv.dao.BtnDao">
    <resultMap type="com.ipincloud.iotbj.srv.domain.Btn" id="BtnMap">
        <result property="id" column="id" jdbcType="BIGINT"/> 
        <result property="title" column="title" jdbcType="VARCHAR"/> 
        <result property="pageId" column="page_id" jdbcType="BIGINT"/> 
        <result property="pageTitle" column="page_title" jdbcType="VARCHAR"/> 
        <result property="path" column="path" jdbcType="VARCHAR"/> 
        <result property="sort" column="sort" jdbcType="INTEGER"/> 
        <result property="memo" column="memo" jdbcType="VARCHAR"/> 
        <result property="pagePath" column="page_path" jdbcType="VARCHAR"/> 
        <result property="srvt" column="srvt" jdbcType="VARCHAR"/> 
        <result property="tbns" column="tbns" jdbcType="VARCHAR"/> 
        <result property="needLogin" column="need_login" jdbcType="VARCHAR"/> 
        <result property="encode" column="encode" jdbcType="VARCHAR"/> 
        <result property="rbac" column="rbac" jdbcType="VARCHAR"/> 
        <result property="dataRange" column="data_range" jdbcType="VARCHAR"/> 
        <result property="version" column="version" jdbcType="INTEGER"/> 
    </resultMap>
        
        <select id="queryById" resultMap="BtnMap">
            select * from btn where id=#{id}
        </select>
        
        
        <select id="queryByUserId" resultMap="BtnMap">
            select btn.* 
            from btn join page on page.id=btn.page_id join role_page on role_page.page_id= page.id  join user_role on user_role.role_id=role_page.role_id  where user_role.user_id= #{userId} order by btn.page_id asc,btn.sort asc
        </select>
        
        
        
        <select id="countBtnList" resultType="java.lang.Integer">
            select count(distinct id) from btn 

            <where>
            <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                <foreach collection="jsonObj.qps" item="item" index="index" >
                <if test='item.op == "like" and item.val != null and item.val !="" '>    
                    and `${item.name}` like concat('%',#{item.val},'%')
                </if>
                <if test='item.op == "=" or item.op == "" or item.op == null '>    
                    and `${item.name}` = #{item.val}
                </if>
                <if test='item.op == "&gt;=" '>    
                    and `${item.name}` &gt;= #{item.val}
                </if>
                <if test='item.op == "&lt;=" '>    
                    and `${item.name}` &lt;= #{item.val}
                </if>
                <if test='item.op == "in" '>    
                    and `${item.name}` in 
                    <foreach  item="item2" collection="item.val" index="index2"  open="(" separator="," close=")">#{item2}
                    </foreach>
                </if>
                </foreach>
            </if>
            </where>
        </select>
        
        
        <select id="btnList" resultType="java.util.Map">
            select btn.`id`,btn.`title` from btn 
            <where>
            <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                <foreach collection="jsonObj.qps" item="item" index="index" >
                <if test='item.op == "like" and item.val != null and item.val !="" '>    
                    and `${item.name}` like concat('%',#{item.val},'%')
                </if>
                <if test='item.op == "=" or item.op == "" or item.op == null '>    
                    and `${item.name}` = #{item.val}
                </if>
                <if test='item.op == "&gt;=" '>    
                    and `${item.name}` &gt;= #{item.val}
                </if>
                <if test='item.op == "&lt;=" '>    
                    and `${item.name}` &lt;= #{item.val}
                </if>
                <if test='item.op == "in" '>    
                    and `${item.name}` in 
                    <foreach  item="item2" collection="item.val" index="index2"  open="(" separator="," close=")">#{item2}
                    </foreach>
                </if>
                </foreach>
            </if>
            </where>
            <if test="jsonObj.sps != null and jsonObj.sps.size() > 0 " >
                order by 
                <foreach  item="item" collection="jsonObj.sps" index="index" separator="," >
                    `${item.name}` ${item.orderV}
                </foreach>
            </if> 
            <if test="jsonObj.startIndex != null and jsonObj.rop!=null ">
                limit #{jsonObj.startIndex},#{jsonObj.rop}
            </if>
        </select>
        
        
            <insert id="addInst"  useGeneratedKeys="true" keyProperty="jsonObj.id">
                insert into btn
                   <foreach collection="jsonObj.keys" item="key" open="(" close=")" separator=",">  
                        ${key}  
                   </foreach>
                   values
                   <foreach collection="jsonObj.keys" item="key" open="(" close=")" separator=",">  
                        #{jsonObj[${key}]}  
                   </foreach> 
            </insert>
            
        
        
            <update id="updateInst" parameterType="java.util.Map" >
               UPDATE btn SET  
               <foreach collection="jsonObj.keys" item="key" separator=","> 
                   <if test="key != 'id' ">   
                   ${key} = #{jsonObj[${key}]}
                   </if>
               </foreach>  
               where id = #{jsonObj.id}
            </update>
            
        
</mapper>
