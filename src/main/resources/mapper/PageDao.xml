<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ipincloud.iotbj.srv.dao.PageDao">
    <resultMap type="com.ipincloud.iotbj.srv.domain.Page" id="PageMap">
        <result property="id" column="id" jdbcType="BIGINT"/> 
        <result property="name" column="name" jdbcType="VARCHAR"/> 
        <result property="icon" column="icon" jdbcType="VARCHAR"/> 
        <result property="title" column="title" jdbcType="VARCHAR"/> 
        <result property="parentId" column="parent_id" jdbcType="BIGINT"/> 
        <result property="parentTitle" column="parent_title" jdbcType="VARCHAR"/> 
        <result property="path" column="path" jdbcType="VARCHAR"/> 
        <result property="isMenu" column="is_menu" jdbcType="VARCHAR"/> 
        <result property="clientRoute" column="client_route" jdbcType="VARCHAR"/> 
        <result property="isCache" column="is_cache" jdbcType="VARCHAR"/> 
        <result property="needLogin" column="need_login" jdbcType="VARCHAR"/> 
        <result property="encode" column="encode" jdbcType="VARCHAR"/> 
        <result property="sort" column="sort" jdbcType="INTEGER"/> 
        <result property="version" column="version" jdbcType="INTEGER"/> 
    </resultMap>
        
        <select id="queryById" resultMap="PageMap">
            select * from page where id=#{id}
        </select>
        
        
        <select id="queryAllByUser" resultType="java.util.Map">
            select  page.* from user_role inner join role_page on user_role.role_id = role_page.role_id inner join page on 
        role_page.page_id = page.id where user_role.user_id=#{userId} and (page.client_route='t' or page.is_menu='t') order by page.parent_id asc,page.sort asc
        </select>
        
        
        
        
            <select id="countPageRolePageMmlist" resultType="java.lang.Integer">
                select count(page.id) from page left join role_page on page.id=role_page.page_id 
                <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                    <foreach collection="jsonObj.qps" item="item" index="index" >
                    <if test='(item.op == "=" or item.op == "" or item.op==null) and  item.name == "role_id" '>    
                        and ${item.tb}.`${item.name}` = #{item.val}
                    </if>
                    </foreach>
                </if>
                <where>
                <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                    <foreach collection="jsonObj.qps" item="item" index="index" >
                    <if test='item.name != "role_id" and item.op == "like" '>    
                        and ${item.tb}.`${item.name}` like concat('%',#{item.val},'%')
                    </if>
                    <if test='(item.op == "=" or item.op == "" or item.op==null) and  item.name != "role_id" '>    
                        and ${item.tb}.`${item.name}` = #{item.val}
                    </if>
                    <if test='item.name != "role_id" and item.op == "in" '>    
                        and ${item.tb}.`${item.name}` in 
                        <foreach  item="item2" collection="item.val" index="index2"  open="(" separator="," close=")">#{item2}
                        </foreach>
                    </if>
                    </foreach>
                </if>
                </where>
            </select>
            
        
            <select id="pageRolePageMmlist" resultType="java.util.Map">
                select page.`id`,page.`name`,page.`icon`,page.`title`,page.`parent_id`,page.`parent_title`,page.`path`,page.`is_menu`,role_page.`role_id` join_id from page left join role_page on page.id=role_page.page_id
                <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                    <foreach collection="jsonObj.qps" item="item" index="index" >
                    <if test='(item.op == "=" or item.op == "" or item.op==null) and  item.name == "role_id" '>    
                        and ${item.tb}.${item.name} = #{item.val}
                    </if>
                    </foreach>
                </if>
                <where>
                <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                    <foreach collection="jsonObj.qps" item="item" index="index" >
                    <if test='item.name != "role_id" and item.op == "like" '>    
                        and ${item.tb}.`${item.name}` like concat('%',#{item.val},'%')
                    </if>
                    <if test='item.name != "role_id" and (item.op == "=" or item.op="" or item.op==null ) '>    
                        and ${item.tb}.`${item.name}` = #{item.val}
                    </if>
                    <if test='item.name != "role_id" and item.op == "in" '>    
                        and ${item.tb}.`${item.name}` in 
                        <foreach  item="item2" collection="item.val" index="index2"  open="(" separator="," close=")">#{item2}
                        </foreach>
                    </if>
                    </foreach>
                </if>
                </where>
                <if test="jsonObj.sps != null and jsonObj.sps.size() > 0 " >
                    order by 
                    <foreach  item="item" collection="jsonObj.sps" index="index" separator="," >
                        ${item.name} ${item.orderV}
                    </foreach>
                </if>
                <if test="jsonObj.startIndex != null and jsonObj.rop!=null ">
                    limit #{jsonObj.startIndex},#{jsonObj.rop}
                </if>
                
            </select>
            
        
            <insert id="addInst"  useGeneratedKeys="true" keyProperty="jsonObj.id">
                insert into page
                   <foreach collection="jsonObj.keys" item="key" open="(" close=")" separator=",">  
                        ${key}  
                   </foreach>
                   values
                   <foreach collection="jsonObj.keys" item="key" open="(" close=")" separator=",">  
                        #{jsonObj[${key}]}  
                   </foreach> 
            </insert>
            
        
        
            <update id="updateInst" parameterType="java.util.Map" >
               UPDATE page SET  
               <foreach collection="jsonObj.keys" item="key" separator=","> 
                   <if test="key != 'id' ">   
                   ${key} = #{jsonObj[${key}]}
                   </if>
               </foreach>  
               where id = #{jsonObj.id}
            </update>
            
        
</mapper>
