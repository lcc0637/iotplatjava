<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ipincloud.iotbj.srv.dao.SensorDao">
    <resultMap type="com.ipincloud.iotbj.srv.domain.Sensor" id="SensorMap">
        <result property="id" column="id" jdbcType="BIGINT"/> 
        <result property="titel" column="titel" jdbcType="VARCHAR"/> 
        <result property="productIds" column="product_ids" jdbcType="BIGINT"/> 
        <result property="categoryId" column="category_id" jdbcType="VARCHAR"/> 
        <result property="firmId" column="firm_id" jdbcType="VARCHAR"/> 
        <result property="regionId" column="region_id" jdbcType="VARCHAR"/> 
        <result property="regionTitle" column="region_title" jdbcType="VARCHAR"/> 
        <result property="streamId" column="stream_id" jdbcType="VARCHAR"/> 
        <result property="ipandport" column="ipandport" jdbcType="VARCHAR"/> 
        <result property="equipment" column="equipment" jdbcType="VARCHAR"/> 
        <result property="accesscode" column="accesscode" jdbcType="VARCHAR"/> 
        <result property="site" column="site" jdbcType="VARCHAR"/> 
        <result property="created" column="created" jdbcType="BIGINT"/> 
        <result property="updated" column="updated" jdbcType="BIGINT"/> 
        <result property="equId" column="equ_id" jdbcType="VARCHAR"/> 
    </resultMap>
        
        <select id="queryById" resultMap="SensorMap">
            select * from sensor where id=#{id}
        </select>
        
        
        
            <insert id="addInst"  useGeneratedKeys="true" keyProperty="jsonObj.id">
                insert into sensor
                   <foreach collection="jsonObj.keys" item="key" open="(" close=")" separator=",">  
                        ${key}  
                   </foreach>
                   values
                   <foreach collection="jsonObj.keys" item="key" open="(" close=")" separator=",">  
                        #{jsonObj[${key}]}  
                   </foreach> 
            </insert>
            
        
        
            <update id="updateInst" parameterType="java.util.Map" >
               UPDATE sensor SET  
               <foreach collection="jsonObj.keys" item="key" separator=","> 
                   <if test="key != 'id' ">   
                   ${key} = #{jsonObj[${key}]}
                   </if>
               </foreach>  
               where id = #{jsonObj.id}
            </update>
            
        
        
        <select id="countSensorList" resultType="java.lang.Integer">
            select count(distinct id) from sensor 

            <where>
            <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                <foreach collection="jsonObj.qps" item="item" index="index" >
                <if test='item.op == "like" and item.val != null and item.val !="" '>    
                    and `${item.name}` like concat('%',#{item.val},'%')
                </if>
                <if test='item.op == "=" or item.op == "" or item.op == null '>    
                    and `${item.name}` = #{item.val}
                </if>
                <if test='item.op == "&gt;=" '>    
                    and `${item.name}` &gt;= #{item.val}
                </if>
                <if test='item.op == "&lt;=" '>    
                    and `${item.name}` &lt;= #{item.val}
                </if>
                <if test='item.op == "in" '>    
                    and `${item.name}` in 
                    <foreach  item="item2" collection="item.val" index="index2"  open="(" separator="," close=")">#{item2}
                    </foreach>
                </if>
                </foreach>
            </if>
            </where>
        </select>
        
        
        <select id="sensorList" resultType="java.util.Map">
            select sensor.`titel`,sensor.`id`,sensor.`product_ids`,sensor.`category_id`,sensor.`firm_id`,sensor.`region_id`,sensor.`region_title`,sensor.`stream_id`,sensor.`ipandport`,sensor.`equipment`,sensor.`accesscode`,sensor.`site`,sensor.`created`,sensor.`updated`,sensor.`equ_id` from sensor 
            <where>
            <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                <foreach collection="jsonObj.qps" item="item" index="index" >
                <if test='item.op == "like" and item.val != null and item.val !="" '>    
                    and `${item.name}` like concat('%',#{item.val},'%')
                </if>
                <if test='item.op == "=" or item.op == "" or item.op == null '>    
                    and `${item.name}` = #{item.val}
                </if>
                <if test='item.op == "&gt;=" '>    
                    and `${item.name}` &gt;= #{item.val}
                </if>
                <if test='item.op == "&lt;=" '>    
                    and `${item.name}` &lt;= #{item.val}
                </if>
                <if test='item.op == "in" '>    
                    and `${item.name}` in 
                    <foreach  item="item2" collection="item.val" index="index2"  open="(" separator="," close=")">#{item2}
                    </foreach>
                </if>
                </foreach>
            </if>
            </where>
            <if test="jsonObj.sps != null and jsonObj.sps.size() > 0 " >
                order by 
                <foreach  item="item" collection="jsonObj.sps" index="index" separator="," >
                    `${item.name}` ${item.orderV}
                </foreach>
            </if> 
            <if test="jsonObj.startIndex != null and jsonObj.rop!=null ">
                limit #{jsonObj.startIndex},#{jsonObj.rop}
            </if>
        </select>
        
        
            <delete id="deletesInst" parameterType="java.util.Map" >
            <if test="jsonObj.sensor!=null and jsonObj.sensor.size()>0">
            delete from sensor 
              <where> 
              <foreach collection="jsonObj.sensor" item="item" index="index" >
                <if test='item.op == "like" '>    
                    and `${item.name}` like concat('%',#{item.val},'%')
                </if>
                <if test='item.op == "=" or item.op == "" or item.op == null '>    
                    and `${item.name}` = #{item.val}
                </if>
                <if test='item.op == "in" '>    
                    and `${item.name}` in 
                    <foreach  item="item2" collection="item.val" index="index2"  open="(" separator="," close=")">#{item2}
                    </foreach>
                </if>
              </foreach>
              </where>
            </if>
            </delete>

            
        
</mapper>
