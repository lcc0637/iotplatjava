<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ipincloud.iotbj.srv.dao.CameraDao">
    <resultMap type="com.ipincloud.iotbj.srv.domain.Camera" id="CameraMap">
        <result property="id" column="id" jdbcType="BIGINT"/> 
        <result property="cameraIndex" column="cameraIndex" jdbcType="VARCHAR"/> 
        <result property="title" column="title" jdbcType="VARCHAR"/> 
        <result property="regionId" column="region_id" jdbcType="BIGINT"/> 
        <result property="regionTitle" column="region_title" jdbcType="VARCHAR"/> 
        <result property="pos" column="pos" jdbcType="VARCHAR"/> 
        <result property="resolution" column="resolution" jdbcType="VARCHAR"/> 
        <result property="url" column="url" jdbcType="VARCHAR"/> 
        <result property="codec" column="codec" jdbcType="VARCHAR"/> 
        <result property="scene" column="scene" jdbcType="VARCHAR"/> 
        <result property="framerate" column="framerate" jdbcType="VARCHAR"/> 
        <result property="corp" column="corp" jdbcType="VARCHAR"/> 
        <result property="videoa" column="videoa" jdbcType="VARCHAR"/> 
        <result property="state" column="state" jdbcType="VARCHAR"/> 
        <result property="algorithms" column="algorithms" jdbcType="VARCHAR"/> 
        <result property="planview" column="planview" jdbcType="VARCHAR"/> 
        <result property="algorithmsId" column="algorithms_id" jdbcType="BIGINT"/> 
        <result property="pushaddress" column="pushaddress" jdbcType="VARCHAR"/> 
    </resultMap>
        
        <select id="queryById" resultMap="CameraMap">
            select * from camera where id=#{id}
        </select>
        
        
        
            <insert id="addInst"  useGeneratedKeys="true" keyProperty="jsonObj.id">
                insert into camera
                   <foreach collection="jsonObj.keys" item="key" open="(" close=")" separator=",">  
                        ${key}  
                   </foreach>
                   values
                   <foreach collection="jsonObj.keys" item="key" open="(" close=")" separator=",">  
                        #{jsonObj[${key}]}  
                   </foreach> 
            </insert>
            
        
        
        <select id="countCameraList" resultType="java.lang.Integer">
            select count(distinct id) from camera 

            <where>
            <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                <foreach collection="jsonObj.qps" item="item" index="index" >
                <if test='item.op == "like" and item.val != null and item.val !="" '>    
                    and `${item.name}` like concat('%',#{item.val},'%')
                </if>
                <if test='item.op == "=" or item.op == "" or item.op == null '>    
                    and `${item.name}` = #{item.val}
                </if>
                <if test='item.op == "&gt;=" '>    
                    and `${item.name}` &gt;= #{item.val}
                </if>
                <if test='item.op == "&lt;=" '>    
                    and `${item.name}` &lt;= #{item.val}
                </if>
                <if test='item.op == "in" '>    
                    and `${item.name}` in 
                    <foreach  item="item2" collection="item.val" index="index2"  open="(" separator="," close=")">#{item2}
                    </foreach>
                </if>
                </foreach>
            </if>
            </where>
        </select>
        
        
        <select id="cameraList" resultType="java.util.Map">
            select camera.`id`,camera.`title`,camera.`region_id`,camera.`region_title`,camera.`pos`,camera.`resolution`,camera.`url`,camera.`codec`,camera.`scene`,camera.`framerate`,camera.`corp`,camera.`videoa`,camera.`state`,camera.`algorithms`,camera.`planview`,camera.`algorithms_id`,camera.`pushaddress`,camera.`cameraIndex` from camera 
            <where>
            <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                <foreach collection="jsonObj.qps" item="item" index="index" >
                <if test='item.op == "like" and item.val != null and item.val !="" '>    
                    and `${item.name}` like concat('%',#{item.val},'%')
                </if>
                <if test='item.op == "=" or item.op == "" or item.op == null '>    
                    and `${item.name}` = #{item.val}
                </if>
                <if test='item.op == "&gt;=" '>    
                    and `${item.name}` &gt;= #{item.val}
                </if>
                <if test='item.op == "&lt;=" '>    
                    and `${item.name}` &lt;= #{item.val}
                </if>
                <if test='item.op == "in" '>    
                    and `${item.name}` in 
                    <foreach  item="item2" collection="item.val" index="index2"  open="(" separator="," close=")">#{item2}
                    </foreach>
                </if>
                </foreach>
            </if>
            </where>
            <if test="jsonObj.sps != null and jsonObj.sps.size() > 0 " >
                order by 
                <foreach  item="item" collection="jsonObj.sps" index="index" separator="," >
                    `${item.name}` ${item.orderV}
                </foreach>
            </if> 
            <if test="jsonObj.startIndex != null and jsonObj.rop!=null ">
                limit #{jsonObj.startIndex},#{jsonObj.rop}
            </if>
        </select>
        
        
            <update id="updateInst" parameterType="java.util.Map" >
               UPDATE camera SET  
               <foreach collection="jsonObj.keys" item="key" separator=","> 
                   <if test="key != 'id' ">   
                   ${key} = #{jsonObj[${key}]}
                   </if>
               </foreach>  
               where id = #{jsonObj.id}
            </update>
            
        
        
            <delete id="deletesInst" parameterType="java.util.Map" >
            <if test="jsonObj.camera!=null and jsonObj.camera.size()>0">
            delete from camera 
              <where> 
              <foreach collection="jsonObj.camera" item="item" index="index" >
                <if test='item.op == "like" '>    
                    and `${item.name}` like concat('%',#{item.val},'%')
                </if>
                <if test='item.op == "=" or item.op == "" or item.op == null '>    
                    and `${item.name}` = #{item.val}
                </if>
                <if test='item.op == "in" '>    
                    and `${item.name}` in 
                    <foreach  item="item2" collection="item.val" index="index2"  open="(" separator="," close=")">#{item2}
                    </foreach>
                </if>
              </foreach>
              </where>
            </if>
            </delete>

            
        
</mapper>
